import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import { useState } from "react";

import Header from "../../components/Header";
import Footer from "../../components/Footer";
import LightBox from "../../components/LightBox";

import { IWork } from "@/types/interfaces";

export default function Works() {
    const [modalState, setModalState] = useState("_hidden");
    const [selectedImage, setSelectedImage] = useState(0);
    const works: IWork[] = [
        {
            id: 1,
            title: "kaleiDANCEscope (Edition asphalt Festival)",
            description:
                "Id est officid que sit et vellaboreic tem quis rehendae laut iliquia cuptatame simetur? Quiatur aut omnisquatur as eum, ut porpossimus sum renducidenis explitaspit untet alitio. Is et voluptatqui omnime oditatem.",
            description_long:
                "Id est officid que sit et vellaboreic tem quis rehendae laut iliquia cuptatame simetur? Quiatur aut omnisquatur as eum, ut porpossimus sum renducidenis explitaspit untet alitio. Is et voluptatqui omnime oditatem.",
            links: [
                {
                    link: "https://www.pinkblau.de",
                    link_text:
                        "Tümay Kılınçel & Cornelius Schaper im Interview – „Tänze zum Preis einer Tasse Kaffee“ (Alexandra Wehrmann, theycallitkleinparis, 05.07.2022) ",
                },
                {
                    link: "https://www.pinkblau.de",
                    link_text:
                        '"Die Tanzwunschmaschine ist eine begehbare Schatzkiste. Darin funkelt es ganz wunderbar. Wer sie wieder verlässt, lächelt ein vergnügliches Ich-weiß-da-was-Lächeln, das man sofort stibitzen möchte. Es ist eben schon ein bisschen magisch, was sich da als Premiere in dem lavendelblauen Wohnwagen auf dem Gertrudismarkt in Eller abspielt."',
                },
            ],
            dates: [
                {
                    date: "22.05.2023",
                    time: "12:00",
                    venue: "Gertrudisplatz, Eller",
                },
            ],
            main_img_src: "/works/images/kaleidanceskope_08_web_kuekelhahn.jpg",
            images: [
                { src: "/works/images/kds-1.jpg", alt: "image one" },
                { src: "/works/images/kds-2.jpg", alt: "image two" },
                { src: "/works/images/kds-3.jpg", alt: "image three" },
                { src: "/works/images/kds-1.jpg", alt: "image one" },
                { src: "/works/images/kds-2.jpg", alt: "image two" },
                { src: "/works/images/kds-3.jpg", alt: "image three" },
                { src: "/works/images/kds-1.jpg", alt: "image one" },
                { src: "/works/images/kds-2.jpg", alt: "image two" },
                { src: "/works/images/kds-3.jpg", alt: "image three" },
            ],
            credits: [
                {
                    role: "Künstlerische Leitung, Choreografie, Performance",
                    name: "Tümay Kılınçel",
                },
                {
                    role: "Künstlerische Leitung, Video",
                    name: "Cornelius Schaper",
                },
            ],
        },
    ];
    function openModal(index) {
        setSelectedImage(index);
        setModalState("_shown");
    }
    function closeModal() {
        setModalState("_hidden");
    }
    return (
        <>
            <Head>
                <title>should-I-know: works</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.svg" />
            </Head>
            <Header location="works | details" />
            <main>
                <div className="spacer_100"></div>
                <div className="main_image_container">
                    <Image
                        src={`${works[0].main_img_src}`}
                        alt=""
                        fill
                        style={{
                            objectFit: "cover",
                        }}
                    />
                </div>
                <div className="spacer_100"></div>
                <div className="works_main">
                    <div className="work_details">
                        <h2>{works[0].title}</h2>
                        <p>{works[0].description_long}</p>
                        {works[0].links && (
                            <div className="work_details">
                                <h2>Links, Berichte und Erwähnungen</h2>
                                {works[0].links.map((link, index) => (
                                    <div key={index} className="link_container">
                                        {"->"}
                                        <a
                                            href={link.link}
                                            target="_blank"
                                            rel="noreferrer"
                                        >
                                            <p>{link.link_text}</p>
                                        </a>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                    {works[0].dates && (
                        <div className="work_dates">
                            <h2>Dates</h2>
                            {works[0].dates.map((date, index) => (
                                <p key={index}>
                                    {date.date} | {date.time} Uhr
                                    <br />
                                    {date.venue}
                                </p>
                            ))}
                        </div>
                    )}
                </div>
                <div className="spacer_100"></div>
                <div className="image_grid">
                    {works[0].images &&
                        works[0].images.map((image, index) => (
                            <div className="grid_item" key={index}>
                                <div
                                    className="grid_shader"
                                    onClick={() => openModal(index)}
                                ></div>
                                <Image
                                    className="grid_image"
                                    src={image.src}
                                    alt={image.alt}
                                    fill
                                    style={{
                                        objectFit: "cover",
                                    }}
                                />
                            </div>
                        ))}
                </div>
                <div className={`modal_bg${modalState}`}>
                    {modalState === "_shown" && (
                        <div className="lightbox_slider">
                            <Image
                                className="close_button"
                                onClick={closeModal}
                                alt="close button"
                                src="/controls/close.svg"
                                width={35}
                                height={35}
                            />
                            <LightBox
                                images={works[0].images}
                                selectedIndex={selectedImage}
                            />
                        </div>
                    )}
                </div>

                <div className="spacer_100"></div>
                {works[0].credits && (
                    <div className="credits_wrapper">
                        <div className="credits">
                            <h2>Credits</h2>
                            <div className="credits_list">
                                {works[0].credits.map((credit, index) => (
                                    <div
                                        key={index}
                                        className="credits_list_item"
                                    >
                                        <p className="credit_name">
                                            {credit.role}:
                                        </p>
                                        <p>{credit.name}</p>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>
                )}
                <div className="spacer_100"></div>
            </main>
            <Footer />
        </>
    );
}
